# リブートフラグ(リブートが必要なサーバ、タイミング時に使用)
reboot_flag: false

# 共通実行ユーザ
public_execute_user: "operation_user"

# ===========================================================

# 共通パッケージのインストール
install_common_package_list:
  - name: tmux
    state: latest
  - name: git
    state: latest
  - name: tree
    state: latest
  - name: jq
    state: latest
  - name: htop
    state: latest
  - name: telnet
    state: latest
  - name: zlib-devel
  - name: bzip2
  - name: bzip2-devel
  - name: readline-devel
  - name: sqlite-devel
  - name: openssl-devel
install_common_package_list_group:
  - name: "@Development Tools"

# 共通envのインストール
install_common_env_list:
  - pyenv
  - rbenv
  - goenv
  - ndenv
  - phpenv

# pythonのバージョン
install_python_version: "2.7.14"
# rubyのバージョン
install_ruby_version: "2.4.2"

# pip設定
install_pip_executable: "/opt/anyenv/envs/pyenv/shims/pip"
install_pip_packages:
  - name: setuptools
    executable: "{{ install_pip_executable }}"
  - name: google_compute_engine
    executable: "{{ install_pip_executable }}"
  - name: python-consul
    executable: "{{ install_pip_executable }}"

# ===========================================================

# consulをインストールするかどうか
consul_install_flag: true

# consul設定
install_consul_version: 1.0.0
install_consul_encrypt_key: "jPHxtd3WAIDpNUKTwCa+Uw=="
install_consul_bind_ip: "0.0.0.0"
install_consul_disable_remote_exec: false
install_consul_datacenter: "bayguh"
install_consul_node_type: "client"
install_consul_nodes:
  - 'consul0001'
install_consul_service_name: "{{ server }}"
install_consul_service_tags: [ "{{ server }}", "{{ env_variable }}" ]

# google SDKをインストールするかどうか
gcloud_install_flag: true

# google SDK設定
install_google_cloud_sdk_version: 170.0.1
install_google_cloud_sdk_sha256sum: a09ff738ea9b3c9af906ee42e8ded48b84388574944d11406ba0cec6b2acdc89

# ===========================================================

# mackerelの設定をするかどうか
mackerel_flag: false

# mackerel-agent-apikey (https://mackerel.io/orgs/[プロジェクト名]?tab=apikeys)
install_mackerel_agent_apikey: "api_key"
install_mackerel_agent_roles: ["{{ env_variable }}:{{ server }}"]

# mackerel agent設定
install_mackerel_agent_plugins:
  mackerel-plugin-inode: "/usr/local/bin/mackerel-plugin-inode"
  mackerel-plugin-linux: "/usr/local/bin/mackerel-plugin-linux"
  mackerel-plugin-mailq: "/usr/local/bin/mackerel-plugin-mailq -M postfix"

install_mackerel_check_plugins:
  check-ntpoffset: "/usr/local/bin/check-ntpoffset -w=500"

# ===========================================================

# datadogの設定をするかどうか
datadog_flag: false

# agent 5 or 6
install_datadog_agent6: false
# agent version
install_datadog_agent_version: "5.18.1-1"
# api key (https://app.datadoghq.com/account/settings#api)
install_datadog_api_key: "api_key"
# agent running設定
install_datadog_enabled: true

# config設定
install_datadog_config:
  tags: "env:{{ env_variable }}, server_type:{{ server }}"
  log_level: INFO
install_datadog_config_ex: {}
install_datadog_checks:
  process:
    init_config:
      min_collection_interval: 15
    instances:
      - name: sshd
        search_string: ['sshd']
      - name: rsyslogd
        search_string: ['rsyslogd']
      - name: postfix
        search_string: ['/usr/libexec/postfix/master']
        exact_match: false
      - name: ntpd
        search_string: ['ntpd']
      - name: consul
        search_string: ['consul']
  tcp_check:
    init_config:
      min_collection_interval: 15
    instances:
      - name: ssh 22
        host: 127.0.0.1
        port: 22
        skip_event: true
      - name: postfix 25
        host: 127.0.0.1
        port: 25
        skip_event: true
      - name: consul 8301
        host: 127.0.0.1
        port: 8301
        skip_event: true
      - name: consul 8500
        host: 127.0.0.1
        port: 8500
        skip_event: true
      - name: consul 8600
        host: 127.0.0.1
        port: 8600
        skip_event: true
  postfix:
    init_config:
    instances:
      - directory: /var/spool/postfix
        queues:
          - incoming
          - active
          - deferred

# ===========================================================

# newrelicの設定をするかどうか
newrelic_flag: false

# licence key (https://rpm.newrelic.com/accounts/[プロジェクト番号])
install_newrelic_license_key: "license_key"
# agent running設定
install_newrelic_service_state: started
install_newrelic_labels:
  - "{{ env_variable }}:{{ server }}"

